@font-face {
  font-family: infini;
  src: url("../fonts/infini-romain.woff") format("woff"), url("../fonts/infini-romain.otf"), url("../fonts/infini-romain.ttf") format("truetype"), url("../fonts/infini-romain.eot") format("embedded-opentype"), url("../fonts/infini-romain.eot") format("svg");
  font-style: normal;
  font-weight: normal;
}
@font-face {
  font-family: infini;
  src: url("../fonts/infini-italique.woff") format("woff"), url("../fonts/infini-italique.otf"), url("../fonts/infini-italique.ttf") format("truetype"), url("../fonts/infini-italique.eot") format("embedded-opentype"), url("../fonts/infini-italique.eot") format("svg");
  font-style: italic;
  font-weight: normal;
}
@font-face {
  font-family: infini;
  src: url("../fonts/infini-gras.woff") format("woff"), url("../fonts/infini-gras.otf"), url("../fonts/infini-gras.ttf") format("truetype"), url("../fonts/infini-gras.eot") format("embedded-opentype"), url("../fonts/infini-gras.eot") format("svg");
  font-weight: bold;
}
button.cesium-infoBox-camera {
  display: none;
}

.cesium-viewer-bottom,
.cesium-viewer-toolbar,
.cesium-viewer-animationContainer,
.cesium-viewer-timelineContainer,
.cesium-viewer-fullscreenContainer,
.cesium-viewer-selectionIndicatorContainer,
.cesium-viewer-infoBoxContainer,
.cesium-viewer-fullscreenContainer {
  display: none !important;
}

/*  Map */
*,
*::after,
*::before {
  box-sizing: border-box;
}

html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-family: sans-serif;
  background: #000;
}

.controller,
.cesium-widget > canvas {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: -100vh;
  left: -100vw;
  z-index: 950;
  overflow: hidden;
  filter: opacity(0);
}

.font-infini {
  font-family: infini;
  color: white;
}
.font-infini--ligature {
  font-variant-ligatures: common-ligatures discretionary-ligatures;
}
.font-infini--uppercase {
  font-variant-caps: small-caps;
  text-transform: uppercase;
}

.center--horizon {
  position: absolute;
  top: 60%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.center-left {
  position: absolute;
  top: 50%;
  left: 10%;
  transform: translateY(-50%);
}

.center--horizon-left {
  position: absolute;
  top: 60%;
  left: 10%;
  transform: translateY(-50%);
}

.center--horizon-right {
  position: absolute;
  top: 60%;
  right: 10%;
  transform: translateY(-50%);
}

.bottom-right {
  position: absolute;
  bottom: 10%;
  right: 10%;
}

#gameCanvas {
  clip-path: inset(6% 3% 6% 3% round 20px);
}

#canvas2D {
  position: absolute;
  left: 0;
  top: 0;
}

/*# sourceMappingURL=main.css.map */
